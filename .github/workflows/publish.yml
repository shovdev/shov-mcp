name: Publish shov-mcp to NPM

on:
  push:
    branches: [master, main]
    paths:
      - 'package.json'
      - 'src/**'

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      version-changed: ${{ steps.check.outputs.changed }}
      new-version: ${{ steps.check.outputs.version }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      
      - name: Check if version changed
        id: check
        run: |
          # Get the current version
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          
          # Get the previous version from the previous commit
          git checkout HEAD~1 -- package.json 2>/dev/null || echo "No previous version"
          PREVIOUS_VERSION=$(node -p "require('./package.json').version" 2>/dev/null || echo "0.0.0")
          
          # Restore current version
          git checkout HEAD -- package.json
          
          echo "Previous version: $PREVIOUS_VERSION"
          echo "Current version: $CURRENT_VERSION"
          
          if [ "$CURRENT_VERSION" != "$PREVIOUS_VERSION" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
            echo "Version changed from $PREVIOUS_VERSION to $CURRENT_VERSION"
          else
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "Version unchanged: $CURRENT_VERSION"
          fi

  publish:
    needs: check-version
    if: needs.check-version.outputs.version-changed == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Required for creating releases
      id-token: write  # Required for NPM provenance
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Install dependencies
        run: npm install
      
      - name: Publish to NPM
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ needs.check-version.outputs.new-version }}
          name: shov-mcp v${{ needs.check-version.outputs.new-version }}
          body: |
            ## shov-mcp v${{ needs.check-version.outputs.new-version }}
            
            MCP (Model Context Protocol) client for Shov - Connect AI assistants to your Shov APIs
            
            Auto-published to NPM from commit ${{ github.sha }}
            
            ### Installation
            ```bash
            npm install -g shov-mcp@${{ needs.check-version.outputs.new-version }}
            ```
            
            ### Usage
            ```bash
            # Connect to Shov Platform
            npx shov-mcp shov.com --api-key shov_live_abc123
            
            # Connect to your Shov project
            npx shov-mcp yourproject.shov.dev --api-key pk_abc123
            ```
          draft: false
          prerelease: false

